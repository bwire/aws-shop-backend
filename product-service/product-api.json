{
  "openapi": "3.0.1",
  "info": {
    "title": "Products Http API",
    "description": "Products Http API (Task 3 Serverless)",
    "contact": {
      "name": "Yevheniy Gandzyuck",
      "email": "e.barbedwire@gmail.com"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://virtserver.swaggerhub.com/bwire/T3-serverless/1.0.0",
      "description": "SwaggerHub API Auto Mocking"
    },
    {
      "url": "https://k7id9o1czl.execute-api.eu-west-1.amazonaws.com"
    }
  ],
  "tags": [
    {
      "name": "Products",
      "description": "Products api (v1)"
    }
  ],
  "paths": {
    "/products": {
      "get": {
        "tags": [
          "Products"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Products"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Payload is empty.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "500": {
            "description": "Cannot add a product",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      }
    },
    "/products/{productId}": {
      "get": {
        "tags": [
          "Products"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "product identificator",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "404": {
            "description": "Product not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Product": {
        "required": [
          "description",
          "id",
          "price",
          "title"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "7567ec4b-b10c-48c5-9345-fc73c48a80a2"
          },
          "price": {
            "type": "number",
            "example": 100
          },
          "count": {
            "type": "number",
            "example": 2
          },
          "description": {
            "type": "string",
            "example": "This book is interesting to read"
          },
          "title": {
            "type": "string",
            "example": "Refactoring by M. Fowler"
          }
        }
      },
      "error_response": {
        "type": "object",
        "properties": {
          "msg": {
            "type": "string",
            "example": "Very ugly error"
          }
        },
        "additionalProperties": false
      }
    },
    "responses": {
      "400": {
        "description": "Bad request. Payload is empty.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/error_response"
            }
          }
        }
      },
      "404": {
        "description": "Product not found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/error_response"
            }
          }
        }
      },
      "500": {
        "description": "Cannot add a product",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/error_response"
            }
          }
        }
      }
    }
  }
}